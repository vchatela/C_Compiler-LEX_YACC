yyin		Variable représentant le fichier de lecture
yyout 		Variable représentant le fichier d'écriture
yytext		Variable représentant la chaîne de caractères reconnue
yyleng		Variable représentant la longueur de yytext
yylex()		Invocation de Lex
yyless(k)	Retire les k premiers caractères de yytext
yymore()	Concaténation du texte reconnu à la prochaine valeur de yytext

Table des symboles
(@ du symbole	|) Nom 	| init	 	| profondeur	| const			|
		0		|	a	|	1		|		1		|	1	//TRUE	|
		1		|	i	|	0		|		1		|	0		 	| 
		2		|	j	|	0		|		2		|	0	//FALSE	|
				|		|			|				|				|
			// TODO
				- soit pile de table des symboles par block
				- soit @ du symbole avec suppressions paraisseuses
				
int main(){
	const int a = 2;
	int i;
	for(i = 0; i< 10 ; i++){
		int j = 3;
	}
}

//gestion de la mémoire
______    	______
|var1 |		|var1 |
|var2 |		|var2 |
|	  |		|temp1|
|     | ou 	|     | ou 2 tables ...
|temp1|		|     |
_______		_______
   /\
  /  \
   ||

int main(){
	int a = 5; 
	/* 
	add_symb(a) (à l'@ 0)
	add_symb(temp0)
	
	AFC @temp0 5 <-> AFC 0 5
	COP @a @temp0
	*/
	int b,c;
	/*
	add_symb(b); add_symb(c);
	*/
	b = a + 15; 
	/*
	add_symb(temp1);
	add_symb(temp2);
	AFC @temp1 15
	ADD @temp2 @a @temp1 // car on ne connait pas la partie droite du égale à ce moment là
	COP @b @temp2
	remove(temp2);
	remove(temp1);
	*/
	c = 8+7;
	add_symb(temp1);
	add_symb(temp2);
	add_symb(temp3);
	AFC @temp1 7
	AFC @temp2 8
	ADD @temp3 @temp1 @temp2
	COP @c @temp3
}